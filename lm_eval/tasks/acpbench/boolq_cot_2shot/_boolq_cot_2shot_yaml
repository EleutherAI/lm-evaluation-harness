tag:
  - acp_bool_cot_2shot
output_type: generate_until
dataset_path: ibm-research/acp_bench
test_split: test
num_fewshot: 2
doc_to_target: "{{answer}}"
doc_to_text: "**Question**: {{context}}  {{question}} **Thoughts**:"
filter_list:
  - name: "extract-yes-no-ordered"
    filter:
      - function: "ordered_regex"
        regex_patterns:
          - '\*\*Final Answer\*\*: The final answer is\s*([Yy]es|[Nn]o)\b'
          - '\*\*Final Answer\*\*:\s*([Yy]es|[Nn]o)\b'
          - 'Final Answer:\s*([Yy]es|[Nn]o)\b'
          - '[Tt]he final answer is\s+([Yy]es|[Nn]o)\b'
          - '[Tt]he answer is\s+([Yy]es|[Nn]o)\b'
          - 'Answer:\s*([Yy]es|[Nn]o)\b'
          - '\b([Yy]es|[Nn]o)\b'
        group_select: -1
      - function: "take_first"
  - name: "extract-yes-no"
    filter:
      - function: "regex"
        group_select: -1
        regex_pattern: '(?i)(?<=\*\*Final Answer\*\*: )\b(yes|no)\b|(?<=Final Answer: )\b(yes|no)\b|(?<=The final answer is )\b(yes|no)\b|(?<=The answer is )\b(yes|no)\b|(?<=Answer: )\b(yes|no)\b'
      - function: "take_first"
generation_kwargs:
  until:
    - "**Question**:"
    - "**Question:**"
    - "Q:"
    - "\n\n\n\n"
  do_sample: false
  temperature: 0.0
  max_gen_toks: 2048
metric_list:
  - metric: exact_match
    aggregation: mean
    higher_is_better: true
    ignore_case: true
    ignore_punctuation: true
metadata:
  version: 1.0
