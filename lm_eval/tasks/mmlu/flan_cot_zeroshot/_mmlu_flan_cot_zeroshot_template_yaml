dataset_path: hails/mmlu_no_train # a copy of `cais/mmlu` with no auxiliary_train split
validation_split: validation
fewshot_split: dev
output_type: generate_until
doc_to_text: "Q: {{question.strip()}}\n(A) {{choices[0]}} (B) {{choices[1]}} (C) {{choices[2]}} (D) {{choices[3]}}\nLet's think step by step."
doc_to_target: "{{['(A)', '(B)', '(C)', '(D)'][answer]}}"
filter_list:
  - name: "ordered-extract"
    filter:
      - function: "ordered_regex"
        regex_patterns:
          - '[Tt]he answer is\s+\(?([A-D])\)?\b'
          - '[Tt]he answer is:\s+\(?([A-D])\)?\b'
          - '[Tt]he final answer is\s+\(?([A-D])\)?\b'
          - 'answer is\s+\(?([A-D])\)?\b'
          - '[Tt]he final answer:\s+\(?([A-D])\)?\b'
          - '\(([A-D])\)'
          - "([A-D])"
        group_select: -1
      - function: "take_first"
  - name: "strict-match"
    filter:
      - function: "regex"
        group_select: -1 # takes last match
        regex_pattern: "(?:(?<=The answer is )|(?<=The answer is: )|(?<=answer is )|(?<=The answer: )|(?<=The final answer: ))\\(?([A-D])\\)?" # Extracts only the letter choice, with or without parentheses
      - function: "take_first"
  - name: "flexible-extract"
    filter:
      - function: "multi_choice_regex"
        group_select: -1
        ignore_case: true
        ignore_punctuation: true
        regex_pattern: "(\\([A-D]\\)|[A-D])" # last update: also includes format of simply taking last letter "X", without the brackets
      - function: "take_first"
generation_kwargs:
  until:
    - "</s>"
    - "Q:"
    - "<|im_end|>"
  do_sample: false
  temperature: 0.0
num_fewshot: 0
metric_list:
  - metric: exact_match
    aggregation: mean
    higher_is_better: true
    ignore_case: true
    ignore_punctuation: true
metadata:
  version: 3.0
dataset_kwargs:
  trust_remote_code: true
