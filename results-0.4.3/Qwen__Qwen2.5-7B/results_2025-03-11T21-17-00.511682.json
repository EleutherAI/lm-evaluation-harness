{
  "results": {
    "xwinograd": {
      "acc,none": 0.8141155315801304,
      "acc_stderr,none": 0.005766562254538757,
      "alias": "xwinograd"
    },
    "xwinograd_en": {
      "acc,none": 0.8662365591397849,
      "acc_stderr,none": 0.007061043850142513,
      "alias": " - xwinograd_en"
    },
    "xwinograd_fr": {
      "acc,none": 0.7469879518072289,
      "acc_stderr,none": 0.04800875830437278,
      "alias": " - xwinograd_fr"
    },
    "xwinograd_jp": {
      "acc,none": 0.7445255474452555,
      "acc_stderr,none": 0.014090642175469433,
      "alias": " - xwinograd_jp"
    },
    "xwinograd_pt": {
      "acc,none": 0.8022813688212928,
      "acc_stderr,none": 0.02460574422970022,
      "alias": " - xwinograd_pt"
    },
    "xwinograd_ru": {
      "acc,none": 0.6952380952380952,
      "acc_stderr,none": 0.02597659935230537,
      "alias": " - xwinograd_ru"
    },
    "xwinograd_zh": {
      "acc,none": 0.7976190476190477,
      "acc_stderr,none": 0.017914248052567784,
      "alias": " - xwinograd_zh"
    },
    "xstorycloze": {
      "acc,none": 0.6202394561097407,
      "acc_stderr,none": 0.0037078285926675707,
      "alias": "xstorycloze"
    },
    "xstorycloze_ar": {
      "acc,none": 0.6227663798808736,
      "acc_stderr,none": 0.012473240654741194,
      "alias": " - xstorycloze_ar"
    },
    "xstorycloze_en": {
      "acc,none": 0.7749834546657842,
      "acc_stderr,none": 0.01074644865596448,
      "alias": " - xstorycloze_en"
    },
    "xstorycloze_es": {
      "acc,none": 0.6882859033752482,
      "acc_stderr,none": 0.011919943180399333,
      "alias": " - xstorycloze_es"
    },
    "xstorycloze_eu": {
      "acc,none": 0.5175380542686963,
      "acc_stderr,none": 0.012859207453266306,
      "alias": " - xstorycloze_eu"
    },
    "xstorycloze_hi": {
      "acc,none": 0.586366644606221,
      "acc_stderr,none": 0.012673714851823765,
      "alias": " - xstorycloze_hi"
    },
    "xstorycloze_id": {
      "acc,none": 0.671740569159497,
      "acc_stderr,none": 0.012084283945686666,
      "alias": " - xstorycloze_id"
    },
    "xstorycloze_my": {
      "acc,none": 0.5069490403706155,
      "acc_stderr,none": 0.012865882570960722,
      "alias": " - xstorycloze_my"
    },
    "xstorycloze_ru": {
      "acc,none": 0.6962276637988087,
      "acc_stderr,none": 0.011834809582513098,
      "alias": " - xstorycloze_ru"
    },
    "xstorycloze_sw": {
      "acc,none": 0.5188616810059563,
      "acc_stderr,none": 0.012857966762464996,
      "alias": " - xstorycloze_sw"
    },
    "xstorycloze_te": {
      "acc,none": 0.5592322964923891,
      "acc_stderr,none": 0.012776518586332792,
      "alias": " - xstorycloze_te"
    },
    "xstorycloze_zh": {
      "acc,none": 0.6796823295830576,
      "acc_stderr,none": 0.012007565507943371,
      "alias": " - xstorycloze_zh"
    },
    "xnli": {
      "acc,none": 0.4285174693106704,
      "acc_stderr,none": 0.002389163042982302,
      "alias": "xnli"
    },
    "xnli_ar": {
      "acc,none": 0.3437751004016064,
      "acc_stderr,none": 0.00952031050288293,
      "alias": " - xnli_ar"
    },
    "xnli_bg": {
      "acc,none": 0.42811244979919677,
      "acc_stderr,none": 0.009917947421067467,
      "alias": " - xnli_bg"
    },
    "xnli_de": {
      "acc,none": 0.4714859437751004,
      "acc_stderr,none": 0.010005762674605281,
      "alias": " - xnli_de"
    },
    "xnli_el": {
      "acc,none": 0.41124497991967873,
      "acc_stderr,none": 0.009862912223544629,
      "alias": " - xnli_el"
    },
    "xnli_en": {
      "acc,none": 0.5341365461847389,
      "acc_stderr,none": 0.009998688066102653,
      "alias": " - xnli_en"
    },
    "xnli_es": {
      "acc,none": 0.4891566265060241,
      "acc_stderr,none": 0.01001971582448349,
      "alias": " - xnli_es"
    },
    "xnli_eu": {
      "acc,none": 0.3932135728542914,
      "acc_stderr,none": 0.006901709305026875,
      "alias": " - xnli_eu"
    },
    "xnli_fr": {
      "acc,none": 0.5124497991967871,
      "acc_stderr,none": 0.010018965593055387,
      "alias": " - xnli_fr"
    },
    "xnli_hi": {
      "acc,none": 0.42570281124497994,
      "acc_stderr,none": 0.009910810127822823,
      "alias": " - xnli_hi"
    },
    "xnli_ru": {
      "acc,none": 0.4742971887550201,
      "acc_stderr,none": 0.010008822253312047,
      "alias": " - xnli_ru"
    },
    "xnli_sw": {
      "acc,none": 0.3514056224899598,
      "acc_stderr,none": 0.009569263079823958,
      "alias": " - xnli_sw"
    },
    "xnli_th": {
      "acc,none": 0.43172690763052207,
      "acc_stderr,none": 0.00992820318611292,
      "alias": " - xnli_th"
    },
    "xnli_tr": {
      "acc,none": 0.42811244979919677,
      "acc_stderr,none": 0.009917947421067465,
      "alias": " - xnli_tr"
    },
    "xnli_ur": {
      "acc,none": 0.3413654618473896,
      "acc_stderr,none": 0.00950428807888022,
      "alias": " - xnli_ur"
    },
    "xnli_vi": {
      "acc,none": 0.4771084337349398,
      "acc_stderr,none": 0.010011563747774335,
      "alias": " - xnli_vi"
    },
    "xnli_zh": {
      "acc,none": 0.378714859437751,
      "acc_stderr,none": 0.009722751990000575,
      "alias": " - xnli_zh"
    },
    "xcopa": {
      "acc,none": 0.6176363636363637,
      "acc_stderr,none": 0.0063920143872850665,
      "alias": "xcopa"
    },
    "xcopa_et": {
      "acc,none": 0.492,
      "acc_stderr,none": 0.022380208834928028,
      "alias": " - xcopa_et"
    },
    "xcopa_ht": {
      "acc,none": 0.532,
      "acc_stderr,none": 0.022337186479044303,
      "alias": " - xcopa_ht"
    },
    "xcopa_id": {
      "acc,none": 0.73,
      "acc_stderr,none": 0.01987435483128748,
      "alias": " - xcopa_id"
    },
    "xcopa_it": {
      "acc,none": 0.748,
      "acc_stderr,none": 0.019435727282249533,
      "alias": " - xcopa_it"
    },
    "xcopa_qu": {
      "acc,none": 0.498,
      "acc_stderr,none": 0.02238289498648353,
      "alias": " - xcopa_qu"
    },
    "xcopa_sw": {
      "acc,none": 0.524,
      "acc_stderr,none": 0.0223572738810164,
      "alias": " - xcopa_sw"
    },
    "xcopa_ta": {
      "acc,none": 0.548,
      "acc_stderr,none": 0.02227969410784342,
      "alias": " - xcopa_ta"
    },
    "xcopa_th": {
      "acc,none": 0.582,
      "acc_stderr,none": 0.022080014812228134,
      "alias": " - xcopa_th"
    },
    "xcopa_tr": {
      "acc,none": 0.598,
      "acc_stderr,none": 0.02194892960993861,
      "alias": " - xcopa_tr"
    },
    "xcopa_vi": {
      "acc,none": 0.744,
      "acc_stderr,none": 0.019536923574747605,
      "alias": " - xcopa_vi"
    },
    "xcopa_zh": {
      "acc,none": 0.798,
      "acc_stderr,none": 0.017973260031288234,
      "alias": " - xcopa_zh"
    },
    "pawsx": {
      "acc,none": 0.43028571428571427,
      "acc_stderr,none": 0.004140168966475162,
      "alias": "pawsx"
    },
    "paws_de": {
      "acc,none": 0.352,
      "acc_stderr,none": 0.010681996654477081,
      "alias": " - paws_de"
    },
    "paws_en": {
      "acc,none": 0.3505,
      "acc_stderr,none": 0.010671542339697311,
      "alias": " - paws_en"
    },
    "paws_es": {
      "acc,none": 0.3555,
      "acc_stderr,none": 0.010705941508891125,
      "alias": " - paws_es"
    },
    "paws_fr": {
      "acc,none": 0.522,
      "acc_stderr,none": 0.011172305500884872,
      "alias": " - paws_fr"
    },
    "paws_ja": {
      "acc,none": 0.527,
      "acc_stderr,none": 0.011166819105029993,
      "alias": " - paws_ja"
    },
    "paws_ko": {
      "acc,none": 0.4615,
      "acc_stderr,none": 0.01114993432795706,
      "alias": " - paws_ko"
    },
    "paws_zh": {
      "acc,none": 0.4435,
      "acc_stderr,none": 0.011111507899646485,
      "alias": " - paws_zh"
    },
    "lambada_multilingual": {
      "perplexity,none": 33.54195900935294,
      "perplexity_stderr,none": 0.9691071270289108,
      "acc,none": 0.4845720939258684,
      "acc_stderr,none": 0.0029813279116339374,
      "alias": "lambada_multilingual"
    },
    "lambada_openai_mt_de": {
      "perplexity,none": 41.524845627297154,
      "perplexity_stderr,none": 2.407566635773596,
      "acc,none": 0.41820298855035903,
      "acc_stderr,none": 0.006872130244051419,
      "alias": " - lambada_openai_mt_de"
    },
    "lambada_openai_mt_en": {
      "perplexity,none": 3.7087358623424374,
      "perplexity_stderr,none": 0.07824642196787424,
      "acc,none": 0.7199689501261402,
      "acc_stderr,none": 0.006255644360928997,
      "alias": " - lambada_openai_mt_en"
    },
    "lambada_openai_mt_es": {
      "perplexity,none": 67.94893386536047,
      "perplexity_stderr,none": 3.598954302311937,
      "acc,none": 0.27634387735299826,
      "acc_stderr,none": 0.006230216184986268,
      "alias": " - lambada_openai_mt_es"
    },
    "lambada_openai_mt_fr": {
      "perplexity,none": 23.45413347407266,
      "perplexity_stderr,none": 1.218598507511846,
      "acc,none": 0.5092179313021541,
      "acc_stderr,none": 0.006964793754756421,
      "alias": " - lambada_openai_mt_fr"
    },
    "lambada_openai_mt_it": {
      "perplexity,none": 31.073146217691956,
      "perplexity_stderr,none": 1.7997948745829542,
      "acc,none": 0.4991267222976907,
      "acc_stderr,none": 0.006965967032480236,
      "alias": " - lambada_openai_mt_it"
    }
  },
  "groups": {
    "xwinograd": {
      "acc,none": 0.8141155315801304,
      "acc_stderr,none": 0.005766562254538757,
      "alias": "xwinograd"
    },
    "xstorycloze": {
      "acc,none": 0.6202394561097407,
      "acc_stderr,none": 0.0037078285926675707,
      "alias": "xstorycloze"
    },
    "xnli": {
      "acc,none": 0.4285174693106704,
      "acc_stderr,none": 0.002389163042982302,
      "alias": "xnli"
    },
    "xcopa": {
      "acc,none": 0.6176363636363637,
      "acc_stderr,none": 0.0063920143872850665,
      "alias": "xcopa"
    },
    "pawsx": {
      "acc,none": 0.43028571428571427,
      "acc_stderr,none": 0.004140168966475162,
      "alias": "pawsx"
    },
    "lambada_multilingual": {
      "perplexity,none": 33.54195900935294,
      "perplexity_stderr,none": 0.9691071270289108,
      "acc,none": 0.4845720939258684,
      "acc_stderr,none": 0.0029813279116339374,
      "alias": "lambada_multilingual"
    }
  },
  "group_subtasks": {
    "lambada_multilingual": [
      "lambada_openai_mt_it",
      "lambada_openai_mt_fr",
      "lambada_openai_mt_es",
      "lambada_openai_mt_en",
      "lambada_openai_mt_de"
    ],
    "pawsx": [
      "paws_zh",
      "paws_ko",
      "paws_ja",
      "paws_fr",
      "paws_es",
      "paws_en",
      "paws_de"
    ],
    "xcopa": [
      "xcopa_zh",
      "xcopa_vi",
      "xcopa_tr",
      "xcopa_th",
      "xcopa_ta",
      "xcopa_sw",
      "xcopa_qu",
      "xcopa_it",
      "xcopa_id",
      "xcopa_ht",
      "xcopa_et"
    ],
    "xnli": [
      "xnli_eu",
      "xnli_zh",
      "xnli_vi",
      "xnli_ur",
      "xnli_tr",
      "xnli_th",
      "xnli_sw",
      "xnli_ru",
      "xnli_hi",
      "xnli_fr",
      "xnli_es",
      "xnli_en",
      "xnli_el",
      "xnli_de",
      "xnli_bg",
      "xnli_ar"
    ],
    "xstorycloze": [
      "xstorycloze_zh",
      "xstorycloze_te",
      "xstorycloze_sw",
      "xstorycloze_ru",
      "xstorycloze_my",
      "xstorycloze_id",
      "xstorycloze_hi",
      "xstorycloze_eu",
      "xstorycloze_es",
      "xstorycloze_en",
      "xstorycloze_ar"
    ],
    "xwinograd": [
      "xwinograd_zh",
      "xwinograd_ru",
      "xwinograd_pt",
      "xwinograd_jp",
      "xwinograd_fr",
      "xwinograd_en"
    ]
  },
  "configs": {
    "lambada_openai_mt_de": {
      "task": "lambada_openai_mt_de",
      "group": [
        "lambada_multilingual"
      ],
      "dataset_path": "EleutherAI/lambada_openai",
      "dataset_name": "de",
      "test_split": "test",
      "doc_to_text": "{{text.split(' ')[:-1]|join(' ')}}",
      "doc_to_target": "{{' '+text.split(' ')[-1]}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "perplexity",
          "aggregation": "perplexity",
          "higher_is_better": false
        },
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "loglikelihood",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "{{text}}",
      "metadata": {
        "version": 1.0
      }
    },
    "lambada_openai_mt_en": {
      "task": "lambada_openai_mt_en",
      "group": [
        "lambada_multilingual"
      ],
      "dataset_path": "EleutherAI/lambada_openai",
      "dataset_name": "en",
      "test_split": "test",
      "doc_to_text": "{{text.split(' ')[:-1]|join(' ')}}",
      "doc_to_target": "{{' '+text.split(' ')[-1]}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "perplexity",
          "aggregation": "perplexity",
          "higher_is_better": false
        },
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "loglikelihood",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "{{text}}",
      "metadata": {
        "version": 1.0
      }
    },
    "lambada_openai_mt_es": {
      "task": "lambada_openai_mt_es",
      "group": [
        "lambada_multilingual"
      ],
      "dataset_path": "EleutherAI/lambada_openai",
      "dataset_name": "es",
      "test_split": "test",
      "doc_to_text": "{{text.split(' ')[:-1]|join(' ')}}",
      "doc_to_target": "{{' '+text.split(' ')[-1]}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "perplexity",
          "aggregation": "perplexity",
          "higher_is_better": false
        },
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "loglikelihood",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "{{text}}",
      "metadata": {
        "version": 1.0
      }
    },
    "lambada_openai_mt_fr": {
      "task": "lambada_openai_mt_fr",
      "group": [
        "lambada_multilingual"
      ],
      "dataset_path": "EleutherAI/lambada_openai",
      "dataset_name": "fr",
      "test_split": "test",
      "doc_to_text": "{{text.split(' ')[:-1]|join(' ')}}",
      "doc_to_target": "{{' '+text.split(' ')[-1]}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "perplexity",
          "aggregation": "perplexity",
          "higher_is_better": false
        },
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "loglikelihood",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "{{text}}",
      "metadata": {
        "version": 1.0
      }
    },
    "lambada_openai_mt_it": {
      "task": "lambada_openai_mt_it",
      "group": [
        "lambada_multilingual"
      ],
      "dataset_path": "EleutherAI/lambada_openai",
      "dataset_name": "it",
      "test_split": "test",
      "doc_to_text": "{{text.split(' ')[:-1]|join(' ')}}",
      "doc_to_target": "{{' '+text.split(' ')[-1]}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "perplexity",
          "aggregation": "perplexity",
          "higher_is_better": false
        },
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "loglikelihood",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "{{text}}",
      "metadata": {
        "version": 1.0
      }
    },
    "paws_de": {
      "task": "paws_de",
      "group": "pawsx",
      "dataset_path": "paws-x",
      "dataset_name": "de",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "",
      "doc_to_target": "label",
      "doc_to_choice": "{{[sentence1+\", richtig? Ja, \"+sentence2, sentence1+\", richtig? Nein, \"+sentence2]}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "paws_en": {
      "task": "paws_en",
      "group": "pawsx",
      "dataset_path": "paws-x",
      "dataset_name": "en",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "",
      "doc_to_target": "label",
      "doc_to_choice": "{{[sentence1+\", right? Yes, \"+sentence2, sentence1+\", right? No, \"+sentence2]}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "paws_es": {
      "task": "paws_es",
      "group": "pawsx",
      "dataset_path": "paws-x",
      "dataset_name": "es",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "",
      "doc_to_target": "label",
      "doc_to_choice": "{{[sentence1+\", verdad? Sí, \"+sentence2, sentence1+\", verdad? No, \"+sentence2]}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "paws_fr": {
      "task": "paws_fr",
      "group": "pawsx",
      "dataset_path": "paws-x",
      "dataset_name": "fr",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "",
      "doc_to_target": "label",
      "doc_to_choice": "{{[sentence1+\", n'est-ce pas? Oui, \"+sentence2, sentence1+\", n'est-ce pas? No, \"+sentence2]}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "paws_ja": {
      "task": "paws_ja",
      "group": "pawsx",
      "dataset_path": "paws-x",
      "dataset_name": "ja",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "",
      "doc_to_target": "label",
      "doc_to_choice": "{{[sentence1+\", ですね? はい, \"+sentence2, sentence1+\", ですね? いいえ, \"+sentence2]}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "paws_ko": {
      "task": "paws_ko",
      "group": "pawsx",
      "dataset_path": "paws-x",
      "dataset_name": "ko",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "",
      "doc_to_target": "label",
      "doc_to_choice": "{{[sentence1+\", 맞죠? 예, \"+sentence2, sentence1+\", 맞죠? 아니요, \"+sentence2]}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "paws_zh": {
      "task": "paws_zh",
      "group": "pawsx",
      "dataset_path": "paws-x",
      "dataset_name": "zh",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "",
      "doc_to_target": "label",
      "doc_to_choice": "{{[sentence1+\", 对吧? 是, \"+sentence2, sentence1+\", 对吧? 不是, \"+sentence2]}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "xcopa_et": {
      "task": "xcopa_et",
      "group": "xcopa",
      "dataset_path": "xcopa",
      "dataset_name": "et",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "functools.partial(<function doc_to_text at 0x7cb15fc58940>, connector={'cause': 'sest', 'effect': 'seetõttu'})",
      "doc_to_target": "label",
      "doc_to_choice": "def doc_to_choice(doc):\n    return [convert_choice(doc[\"choice1\"]), convert_choice(doc[\"choice2\"])]\n",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc"
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 1.0
      }
    },
    "xcopa_ht": {
      "task": "xcopa_ht",
      "group": "xcopa",
      "dataset_path": "xcopa",
      "dataset_name": "ht",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "functools.partial(<function doc_to_text at 0x7cb15fc59900>, connector={'cause': 'poukisa', 'effect': 'donk sa'})",
      "doc_to_target": "label",
      "doc_to_choice": "def doc_to_choice(doc):\n    return [convert_choice(doc[\"choice1\"]), convert_choice(doc[\"choice2\"])]\n",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc"
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 1.0
      }
    },
    "xcopa_id": {
      "task": "xcopa_id",
      "group": "xcopa",
      "dataset_path": "xcopa",
      "dataset_name": "id",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "functools.partial(<function doc_to_text at 0x7cb15fc592d0>, connector={'cause': 'karena', 'effect': 'maka'})",
      "doc_to_target": "label",
      "doc_to_choice": "def doc_to_choice(doc):\n    return [convert_choice(doc[\"choice1\"]), convert_choice(doc[\"choice2\"])]\n",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc"
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 1.0
      }
    },
    "xcopa_it": {
      "task": "xcopa_it",
      "group": "xcopa",
      "dataset_path": "xcopa",
      "dataset_name": "it",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "functools.partial(<function doc_to_text at 0x7cb15fc59ea0>, connector={'cause': 'perché', 'effect': 'quindi'})",
      "doc_to_target": "label",
      "doc_to_choice": "def doc_to_choice(doc):\n    return [convert_choice(doc[\"choice1\"]), convert_choice(doc[\"choice2\"])]\n",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc"
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 1.0
      }
    },
    "xcopa_qu": {
      "task": "xcopa_qu",
      "group": "xcopa",
      "dataset_path": "xcopa",
      "dataset_name": "qu",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "functools.partial(<function doc_to_text at 0x7cb15fc5b640>, connector={'cause': 'imataq', 'effect': 'chaymi'})",
      "doc_to_target": "label",
      "doc_to_choice": "def doc_to_choice(doc):\n    return [convert_choice(doc[\"choice1\"]), convert_choice(doc[\"choice2\"])]\n",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc"
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 1.0
      }
    },
    "xcopa_sw": {
      "task": "xcopa_sw",
      "group": "xcopa",
      "dataset_path": "xcopa",
      "dataset_name": "sw",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "functools.partial(<function doc_to_text at 0x7cb15fc59d80>, connector={'cause': 'kwa sababu', 'effect': 'kwa hiyo'})",
      "doc_to_target": "label",
      "doc_to_choice": "def doc_to_choice(doc):\n    return [convert_choice(doc[\"choice1\"]), convert_choice(doc[\"choice2\"])]\n",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc"
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 1.0
      }
    },
    "xcopa_ta": {
      "task": "xcopa_ta",
      "group": "xcopa",
      "dataset_path": "xcopa",
      "dataset_name": "ta",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "functools.partial(<function doc_to_text at 0x7cb15fcb9360>, connector={'cause': 'காரணமாக', 'effect': 'எனவே'})",
      "doc_to_target": "label",
      "doc_to_choice": "def doc_to_choice(doc):\n    return [convert_choice(doc[\"choice1\"]), convert_choice(doc[\"choice2\"])]\n",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc"
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 1.0
      }
    },
    "xcopa_th": {
      "task": "xcopa_th",
      "group": "xcopa",
      "dataset_path": "xcopa",
      "dataset_name": "th",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "functools.partial(<function doc_to_text at 0x7cb15fcbb400>, connector={'cause': 'เพราะ', 'effect': 'ดังนั้น'})",
      "doc_to_target": "label",
      "doc_to_choice": "def doc_to_choice(doc):\n    return [convert_choice(doc[\"choice1\"]), convert_choice(doc[\"choice2\"])]\n",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc"
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 1.0
      }
    },
    "xcopa_tr": {
      "task": "xcopa_tr",
      "group": "xcopa",
      "dataset_path": "xcopa",
      "dataset_name": "tr",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "functools.partial(<function doc_to_text at 0x7cb15fb213f0>, connector={'cause': 'çünkü', 'effect': 'bu yüzden'})",
      "doc_to_target": "label",
      "doc_to_choice": "def doc_to_choice(doc):\n    return [convert_choice(doc[\"choice1\"]), convert_choice(doc[\"choice2\"])]\n",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc"
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 1.0
      }
    },
    "xcopa_vi": {
      "task": "xcopa_vi",
      "group": "xcopa",
      "dataset_path": "xcopa",
      "dataset_name": "vi",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "functools.partial(<function doc_to_text at 0x7cb15fb23eb0>, connector={'cause': 'bởi vì', 'effect': 'vì vậy'})",
      "doc_to_target": "label",
      "doc_to_choice": "def doc_to_choice(doc):\n    return [convert_choice(doc[\"choice1\"]), convert_choice(doc[\"choice2\"])]\n",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc"
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 1.0
      }
    },
    "xcopa_zh": {
      "task": "xcopa_zh",
      "group": "xcopa",
      "dataset_path": "xcopa",
      "dataset_name": "zh",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "functools.partial(<function doc_to_text at 0x7cb15fb56b00>, connector={'cause': '因为', 'effect': '所以'})",
      "doc_to_target": "label",
      "doc_to_choice": "def doc_to_choice(doc):\n    return [convert_choice(doc[\"choice1\"]), convert_choice(doc[\"choice2\"])]\n",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc"
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 1.0
      }
    },
    "xnli_ar": {
      "task": "xnli_ar",
      "group": "xnli",
      "dataset_path": "xnli",
      "dataset_name": "ar",
      "training_split": "train",
      "validation_split": "validation",
      "doc_to_text": "",
      "doc_to_target": "label",
      "doc_to_choice": "{{[premise+\", صحيح? نعم, \"+hypothesis,premise+\", صحيح? لذا, \"+hypothesis,premise+\", صحيح? رقم, \"+hypothesis]}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 1.0
      }
    },
    "xnli_bg": {
      "task": "xnli_bg",
      "group": "xnli",
      "dataset_path": "xnli",
      "dataset_name": "bg",
      "training_split": "train",
      "validation_split": "validation",
      "doc_to_text": "",
      "doc_to_target": "label",
      "doc_to_choice": "{{[premise+\", правилно? да, \"+hypothesis,premise+\", правилно? така, \"+hypothesis,premise+\", правилно? не, \"+hypothesis]}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 1.0
      }
    },
    "xnli_de": {
      "task": "xnli_de",
      "group": "xnli",
      "dataset_path": "xnli",
      "dataset_name": "de",
      "training_split": "train",
      "validation_split": "validation",
      "doc_to_text": "",
      "doc_to_target": "label",
      "doc_to_choice": "{{[premise+\", richtig? Ja, \"+hypothesis,premise+\", richtig? Auch, \"+hypothesis,premise+\", richtig? Nein, \"+hypothesis]}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 1.0
      }
    },
    "xnli_el": {
      "task": "xnli_el",
      "group": "xnli",
      "dataset_path": "xnli",
      "dataset_name": "el",
      "training_split": "train",
      "validation_split": "validation",
      "doc_to_text": "",
      "doc_to_target": "label",
      "doc_to_choice": "{{[premise+\", σωστός? Ναί, \"+hypothesis,premise+\", σωστός? Έτσι, \"+hypothesis,premise+\", σωστός? όχι, \"+hypothesis]}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 1.0
      }
    },
    "xnli_en": {
      "task": "xnli_en",
      "group": "xnli",
      "dataset_path": "xnli",
      "dataset_name": "en",
      "training_split": "train",
      "validation_split": "validation",
      "doc_to_text": "",
      "doc_to_target": "label",
      "doc_to_choice": "{{[premise+\", right? Yes, \"+hypothesis,premise+\", right? Also, \"+hypothesis,premise+\", right? No, \"+hypothesis]}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 1.0
      }
    },
    "xnli_es": {
      "task": "xnli_es",
      "group": "xnli",
      "dataset_path": "xnli",
      "dataset_name": "es",
      "training_split": "train",
      "validation_split": "validation",
      "doc_to_text": "",
      "doc_to_target": "label",
      "doc_to_choice": "{{[premise+\", correcto? Sí, \"+hypothesis,premise+\", correcto? Asi que, \"+hypothesis,premise+\", correcto? No, \"+hypothesis]}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 1.0
      }
    },
    "xnli_eu": {
      "task": "xnli_eu",
      "group": "xnli",
      "dataset_path": "HiTZ/xnli-eu",
      "dataset_name": "eu",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "",
      "doc_to_target": "label",
      "doc_to_choice": "{{[premise+\", ezta? Bai, \"+hypothesis,premise+\", ezta? Gainera, \"+hypothesis,premise+\", ezta? Ez, \"+hypothesis]}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 1.0
      }
    },
    "xnli_fr": {
      "task": "xnli_fr",
      "group": "xnli",
      "dataset_path": "xnli",
      "dataset_name": "fr",
      "training_split": "train",
      "validation_split": "validation",
      "doc_to_text": "",
      "doc_to_target": "label",
      "doc_to_choice": "{{[premise+\", correct? Oui, \"+hypothesis,premise+\", correct? Aussi, \"+hypothesis,premise+\", correct? Non, \"+hypothesis]}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 1.0
      }
    },
    "xnli_hi": {
      "task": "xnli_hi",
      "group": "xnli",
      "dataset_path": "xnli",
      "dataset_name": "hi",
      "training_split": "train",
      "validation_split": "validation",
      "doc_to_text": "",
      "doc_to_target": "label",
      "doc_to_choice": "{{[premise+\", सही? हाँ, \"+hypothesis,premise+\", सही? इसलिए, \"+hypothesis,premise+\", सही? नहीं, \"+hypothesis]}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 1.0
      }
    },
    "xnli_ru": {
      "task": "xnli_ru",
      "group": "xnli",
      "dataset_path": "xnli",
      "dataset_name": "ru",
      "training_split": "train",
      "validation_split": "validation",
      "doc_to_text": "",
      "doc_to_target": "label",
      "doc_to_choice": "{{[premise+\", правильно? Да, \"+hypothesis,premise+\", правильно? Так, \"+hypothesis,premise+\", правильно? Нет, \"+hypothesis]}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 1.0
      }
    },
    "xnli_sw": {
      "task": "xnli_sw",
      "group": "xnli",
      "dataset_path": "xnli",
      "dataset_name": "sw",
      "training_split": "train",
      "validation_split": "validation",
      "doc_to_text": "",
      "doc_to_target": "label",
      "doc_to_choice": "{{[premise+\", sahihi? Ndiyo, \"+hypothesis,premise+\", sahihi? Hivyo, \"+hypothesis,premise+\", sahihi? Hapana, \"+hypothesis]}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 1.0
      }
    },
    "xnli_th": {
      "task": "xnli_th",
      "group": "xnli",
      "dataset_path": "xnli",
      "dataset_name": "th",
      "training_split": "train",
      "validation_split": "validation",
      "doc_to_text": "",
      "doc_to_target": "label",
      "doc_to_choice": "{{[premise+\", ถูกต้อง? ใช่, \"+hypothesis,premise+\", ถูกต้อง? ดังนั้น, \"+hypothesis,premise+\", ถูกต้อง? ไม่, \"+hypothesis]}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 1.0
      }
    },
    "xnli_tr": {
      "task": "xnli_tr",
      "group": "xnli",
      "dataset_path": "xnli",
      "dataset_name": "tr",
      "training_split": "train",
      "validation_split": "validation",
      "doc_to_text": "",
      "doc_to_target": "label",
      "doc_to_choice": "{{[premise+\", doğru? Evet, \"+hypothesis,premise+\", doğru? Böylece, \"+hypothesis,premise+\", doğru? Hayır, \"+hypothesis]}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 1.0
      }
    },
    "xnli_ur": {
      "task": "xnli_ur",
      "group": "xnli",
      "dataset_path": "xnli",
      "dataset_name": "ur",
      "training_split": "train",
      "validation_split": "validation",
      "doc_to_text": "",
      "doc_to_target": "label",
      "doc_to_choice": "{{[premise+\", صحیح? جی ہاں, \"+hypothesis,premise+\", صحیح? اس لئے, \"+hypothesis,premise+\", صحیح? نہیں, \"+hypothesis]}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 1.0
      }
    },
    "xnli_vi": {
      "task": "xnli_vi",
      "group": "xnli",
      "dataset_path": "xnli",
      "dataset_name": "vi",
      "training_split": "train",
      "validation_split": "validation",
      "doc_to_text": "",
      "doc_to_target": "label",
      "doc_to_choice": "{{[premise+\", đúng? Vâng, \"+hypothesis,premise+\", đúng? Vì vậy, \"+hypothesis,premise+\", đúng? Không, \"+hypothesis]}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 1.0
      }
    },
    "xnli_zh": {
      "task": "xnli_zh",
      "group": "xnli",
      "dataset_path": "xnli",
      "dataset_name": "zh",
      "training_split": "train",
      "validation_split": "validation",
      "doc_to_text": "",
      "doc_to_target": "label",
      "doc_to_choice": "{{[premise+\", 正确? 是的, \"+hypothesis,premise+\", 正确? 所以, \"+hypothesis,premise+\", 正确? 不是的, \"+hypothesis]}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 1.0
      }
    },
    "xstorycloze_ar": {
      "task": "xstorycloze_ar",
      "group": "xstorycloze",
      "dataset_path": "juletxara/xstory_cloze",
      "dataset_name": "ar",
      "training_split": "train",
      "validation_split": "eval",
      "doc_to_text": "{{[input_sentence_1, input_sentence_2, input_sentence_3, input_sentence_4]|join(' ')}}",
      "doc_to_target": "{{answer_right_ending-1}}",
      "doc_to_choice": "{{[sentence_quiz1, sentence_quiz2]}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "{{[input_sentence_1, input_sentence_2, input_sentence_3, input_sentence_4]|join(' ')}}",
      "metadata": {
        "version": 1.0
      }
    },
    "xstorycloze_en": {
      "task": "xstorycloze_en",
      "group": "xstorycloze",
      "dataset_path": "juletxara/xstory_cloze",
      "dataset_name": "en",
      "training_split": "train",
      "validation_split": "eval",
      "doc_to_text": "{{[input_sentence_1, input_sentence_2, input_sentence_3, input_sentence_4]|join(' ')}}",
      "doc_to_target": "{{answer_right_ending-1}}",
      "doc_to_choice": "{{[sentence_quiz1, sentence_quiz2]}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "{{[input_sentence_1, input_sentence_2, input_sentence_3, input_sentence_4]|join(' ')}}",
      "metadata": {
        "version": 1.0
      }
    },
    "xstorycloze_es": {
      "task": "xstorycloze_es",
      "group": "xstorycloze",
      "dataset_path": "juletxara/xstory_cloze",
      "dataset_name": "es",
      "training_split": "train",
      "validation_split": "eval",
      "doc_to_text": "{{[input_sentence_1, input_sentence_2, input_sentence_3, input_sentence_4]|join(' ')}}",
      "doc_to_target": "{{answer_right_ending-1}}",
      "doc_to_choice": "{{[sentence_quiz1, sentence_quiz2]}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "{{[input_sentence_1, input_sentence_2, input_sentence_3, input_sentence_4]|join(' ')}}",
      "metadata": {
        "version": 1.0
      }
    },
    "xstorycloze_eu": {
      "task": "xstorycloze_eu",
      "group": "xstorycloze",
      "dataset_path": "juletxara/xstory_cloze",
      "dataset_name": "eu",
      "training_split": "train",
      "validation_split": "eval",
      "doc_to_text": "{{[input_sentence_1, input_sentence_2, input_sentence_3, input_sentence_4]|join(' ')}}",
      "doc_to_target": "{{answer_right_ending-1}}",
      "doc_to_choice": "{{[sentence_quiz1, sentence_quiz2]}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "{{[input_sentence_1, input_sentence_2, input_sentence_3, input_sentence_4]|join(' ')}}",
      "metadata": {
        "version": 1.0
      }
    },
    "xstorycloze_hi": {
      "task": "xstorycloze_hi",
      "group": "xstorycloze",
      "dataset_path": "juletxara/xstory_cloze",
      "dataset_name": "hi",
      "training_split": "train",
      "validation_split": "eval",
      "doc_to_text": "{{[input_sentence_1, input_sentence_2, input_sentence_3, input_sentence_4]|join(' ')}}",
      "doc_to_target": "{{answer_right_ending-1}}",
      "doc_to_choice": "{{[sentence_quiz1, sentence_quiz2]}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "{{[input_sentence_1, input_sentence_2, input_sentence_3, input_sentence_4]|join(' ')}}",
      "metadata": {
        "version": 1.0
      }
    },
    "xstorycloze_id": {
      "task": "xstorycloze_id",
      "group": "xstorycloze",
      "dataset_path": "juletxara/xstory_cloze",
      "dataset_name": "id",
      "training_split": "train",
      "validation_split": "eval",
      "doc_to_text": "{{[input_sentence_1, input_sentence_2, input_sentence_3, input_sentence_4]|join(' ')}}",
      "doc_to_target": "{{answer_right_ending-1}}",
      "doc_to_choice": "{{[sentence_quiz1, sentence_quiz2]}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "{{[input_sentence_1, input_sentence_2, input_sentence_3, input_sentence_4]|join(' ')}}",
      "metadata": {
        "version": 1.0
      }
    },
    "xstorycloze_my": {
      "task": "xstorycloze_my",
      "group": "xstorycloze",
      "dataset_path": "juletxara/xstory_cloze",
      "dataset_name": "my",
      "training_split": "train",
      "validation_split": "eval",
      "doc_to_text": "{{[input_sentence_1, input_sentence_2, input_sentence_3, input_sentence_4]|join(' ')}}",
      "doc_to_target": "{{answer_right_ending-1}}",
      "doc_to_choice": "{{[sentence_quiz1, sentence_quiz2]}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "{{[input_sentence_1, input_sentence_2, input_sentence_3, input_sentence_4]|join(' ')}}",
      "metadata": {
        "version": 1.0
      }
    },
    "xstorycloze_ru": {
      "task": "xstorycloze_ru",
      "group": "xstorycloze",
      "dataset_path": "juletxara/xstory_cloze",
      "dataset_name": "ru",
      "training_split": "train",
      "validation_split": "eval",
      "doc_to_text": "{{[input_sentence_1, input_sentence_2, input_sentence_3, input_sentence_4]|join(' ')}}",
      "doc_to_target": "{{answer_right_ending-1}}",
      "doc_to_choice": "{{[sentence_quiz1, sentence_quiz2]}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "{{[input_sentence_1, input_sentence_2, input_sentence_3, input_sentence_4]|join(' ')}}",
      "metadata": {
        "version": 1.0
      }
    },
    "xstorycloze_sw": {
      "task": "xstorycloze_sw",
      "group": "xstorycloze",
      "dataset_path": "juletxara/xstory_cloze",
      "dataset_name": "sw",
      "training_split": "train",
      "validation_split": "eval",
      "doc_to_text": "{{[input_sentence_1, input_sentence_2, input_sentence_3, input_sentence_4]|join(' ')}}",
      "doc_to_target": "{{answer_right_ending-1}}",
      "doc_to_choice": "{{[sentence_quiz1, sentence_quiz2]}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "{{[input_sentence_1, input_sentence_2, input_sentence_3, input_sentence_4]|join(' ')}}",
      "metadata": {
        "version": 1.0
      }
    },
    "xstorycloze_te": {
      "task": "xstorycloze_te",
      "group": "xstorycloze",
      "dataset_path": "juletxara/xstory_cloze",
      "dataset_name": "te",
      "training_split": "train",
      "validation_split": "eval",
      "doc_to_text": "{{[input_sentence_1, input_sentence_2, input_sentence_3, input_sentence_4]|join(' ')}}",
      "doc_to_target": "{{answer_right_ending-1}}",
      "doc_to_choice": "{{[sentence_quiz1, sentence_quiz2]}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "{{[input_sentence_1, input_sentence_2, input_sentence_3, input_sentence_4]|join(' ')}}",
      "metadata": {
        "version": 1.0
      }
    },
    "xstorycloze_zh": {
      "task": "xstorycloze_zh",
      "group": "xstorycloze",
      "dataset_path": "juletxara/xstory_cloze",
      "dataset_name": "zh",
      "training_split": "train",
      "validation_split": "eval",
      "doc_to_text": "{{[input_sentence_1, input_sentence_2, input_sentence_3, input_sentence_4]|join(' ')}}",
      "doc_to_target": "{{answer_right_ending-1}}",
      "doc_to_choice": "{{[sentence_quiz1, sentence_quiz2]}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "{{[input_sentence_1, input_sentence_2, input_sentence_3, input_sentence_4]|join(' ')}}",
      "metadata": {
        "version": 1.0
      }
    },
    "xwinograd_en": {
      "task": "xwinograd_en",
      "group": [
        "xwinograd"
      ],
      "dataset_path": "Muennighoff/xwinograd",
      "dataset_name": "en",
      "test_split": "test",
      "doc_to_text": "def doc_to_text(doc: Dict) -> int:\n    \"\"\"\n    Return index of the correct choice.\n\n    Note: We are using the \"multiple input\" mode of the multiple-choice\n        output-type, which means we use different contexts with the same target\n        for the different choices, rather than the same context and different targets.\n    \"\"\"\n    answer_to_num = {\"1\": 0, \"2\": 1}\n    return answer_to_num[doc[\"answer\"]]\n",
      "doc_to_target": "def doc_to_target(doc: Dict) -> str:\n    \"\"\"\n    Return the target completion.\n\n    Note that this does not depend on the correct choice as we are using\n    \"multiple input\" mode.\n    \"\"\"\n    idx = doc[\"sentence\"].index(\"_\") + 1\n    return doc[\"sentence\"][idx:].strip()\n",
      "doc_to_choice": "def doc_to_choice(doc: Dict) -> List[str]:\n    \"\"\"Return the choices that will be used as contexts in \"multiple input\" mode.\"\"\"\n    idx = doc[\"sentence\"].index(\"_\")\n    options = [doc[\"option1\"], doc[\"option2\"]]\n    return [doc[\"sentence\"][:idx] + opt for opt in options]\n",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 1.0
      }
    },
    "xwinograd_fr": {
      "task": "xwinograd_fr",
      "group": [
        "xwinograd"
      ],
      "dataset_path": "Muennighoff/xwinograd",
      "dataset_name": "fr",
      "test_split": "test",
      "doc_to_text": "def doc_to_text(doc: Dict) -> int:\n    \"\"\"\n    Return index of the correct choice.\n\n    Note: We are using the \"multiple input\" mode of the multiple-choice\n        output-type, which means we use different contexts with the same target\n        for the different choices, rather than the same context and different targets.\n    \"\"\"\n    answer_to_num = {\"1\": 0, \"2\": 1}\n    return answer_to_num[doc[\"answer\"]]\n",
      "doc_to_target": "def doc_to_target(doc: Dict) -> str:\n    \"\"\"\n    Return the target completion.\n\n    Note that this does not depend on the correct choice as we are using\n    \"multiple input\" mode.\n    \"\"\"\n    idx = doc[\"sentence\"].index(\"_\") + 1\n    return doc[\"sentence\"][idx:].strip()\n",
      "doc_to_choice": "def doc_to_choice(doc: Dict) -> List[str]:\n    \"\"\"Return the choices that will be used as contexts in \"multiple input\" mode.\"\"\"\n    idx = doc[\"sentence\"].index(\"_\")\n    options = [doc[\"option1\"], doc[\"option2\"]]\n    return [doc[\"sentence\"][:idx] + opt for opt in options]\n",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 1.0
      }
    },
    "xwinograd_jp": {
      "task": "xwinograd_jp",
      "group": [
        "xwinograd"
      ],
      "dataset_path": "Muennighoff/xwinograd",
      "dataset_name": "jp",
      "test_split": "test",
      "doc_to_text": "def doc_to_text(doc: Dict) -> int:\n    \"\"\"\n    Return index of the correct choice.\n\n    Note: We are using the \"multiple input\" mode of the multiple-choice\n        output-type, which means we use different contexts with the same target\n        for the different choices, rather than the same context and different targets.\n    \"\"\"\n    answer_to_num = {\"1\": 0, \"2\": 1}\n    return answer_to_num[doc[\"answer\"]]\n",
      "doc_to_target": "def doc_to_target(doc: Dict) -> str:\n    \"\"\"\n    Return the target completion.\n\n    Note that this does not depend on the correct choice as we are using\n    \"multiple input\" mode.\n    \"\"\"\n    idx = doc[\"sentence\"].index(\"_\") + 1\n    return doc[\"sentence\"][idx:].strip()\n",
      "doc_to_choice": "def doc_to_choice(doc: Dict) -> List[str]:\n    \"\"\"Return the choices that will be used as contexts in \"multiple input\" mode.\"\"\"\n    idx = doc[\"sentence\"].index(\"_\")\n    options = [doc[\"option1\"], doc[\"option2\"]]\n    return [doc[\"sentence\"][:idx] + opt for opt in options]\n",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 1.0
      }
    },
    "xwinograd_pt": {
      "task": "xwinograd_pt",
      "group": [
        "xwinograd"
      ],
      "dataset_path": "Muennighoff/xwinograd",
      "dataset_name": "pt",
      "test_split": "test",
      "doc_to_text": "def doc_to_text(doc: Dict) -> int:\n    \"\"\"\n    Return index of the correct choice.\n\n    Note: We are using the \"multiple input\" mode of the multiple-choice\n        output-type, which means we use different contexts with the same target\n        for the different choices, rather than the same context and different targets.\n    \"\"\"\n    answer_to_num = {\"1\": 0, \"2\": 1}\n    return answer_to_num[doc[\"answer\"]]\n",
      "doc_to_target": "def doc_to_target(doc: Dict) -> str:\n    \"\"\"\n    Return the target completion.\n\n    Note that this does not depend on the correct choice as we are using\n    \"multiple input\" mode.\n    \"\"\"\n    idx = doc[\"sentence\"].index(\"_\") + 1\n    return doc[\"sentence\"][idx:].strip()\n",
      "doc_to_choice": "def doc_to_choice(doc: Dict) -> List[str]:\n    \"\"\"Return the choices that will be used as contexts in \"multiple input\" mode.\"\"\"\n    idx = doc[\"sentence\"].index(\"_\")\n    options = [doc[\"option1\"], doc[\"option2\"]]\n    return [doc[\"sentence\"][:idx] + opt for opt in options]\n",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 1.0
      }
    },
    "xwinograd_ru": {
      "task": "xwinograd_ru",
      "group": [
        "xwinograd"
      ],
      "dataset_path": "Muennighoff/xwinograd",
      "dataset_name": "ru",
      "test_split": "test",
      "doc_to_text": "def doc_to_text(doc: Dict) -> int:\n    \"\"\"\n    Return index of the correct choice.\n\n    Note: We are using the \"multiple input\" mode of the multiple-choice\n        output-type, which means we use different contexts with the same target\n        for the different choices, rather than the same context and different targets.\n    \"\"\"\n    answer_to_num = {\"1\": 0, \"2\": 1}\n    return answer_to_num[doc[\"answer\"]]\n",
      "doc_to_target": "def doc_to_target(doc: Dict) -> str:\n    \"\"\"\n    Return the target completion.\n\n    Note that this does not depend on the correct choice as we are using\n    \"multiple input\" mode.\n    \"\"\"\n    idx = doc[\"sentence\"].index(\"_\") + 1\n    return doc[\"sentence\"][idx:].strip()\n",
      "doc_to_choice": "def doc_to_choice(doc: Dict) -> List[str]:\n    \"\"\"Return the choices that will be used as contexts in \"multiple input\" mode.\"\"\"\n    idx = doc[\"sentence\"].index(\"_\")\n    options = [doc[\"option1\"], doc[\"option2\"]]\n    return [doc[\"sentence\"][:idx] + opt for opt in options]\n",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 1.0
      }
    },
    "xwinograd_zh": {
      "task": "xwinograd_zh",
      "group": [
        "xwinograd"
      ],
      "dataset_path": "Muennighoff/xwinograd",
      "dataset_name": "zh",
      "test_split": "test",
      "doc_to_text": "def doc_to_text(doc: Dict) -> int:\n    \"\"\"\n    Return index of the correct choice.\n\n    Note: We are using the \"multiple input\" mode of the multiple-choice\n        output-type, which means we use different contexts with the same target\n        for the different choices, rather than the same context and different targets.\n    \"\"\"\n    answer_to_num = {\"1\": 0, \"2\": 1}\n    return answer_to_num[doc[\"answer\"]]\n",
      "doc_to_target": "def doc_to_target(doc: Dict) -> str:\n    \"\"\"\n    Return the target completion.\n\n    Note that this does not depend on the correct choice as we are using\n    \"multiple input\" mode.\n    \"\"\"\n    idx = doc[\"sentence\"].index(\"_\") + 1\n    return doc[\"sentence\"][idx:].strip()\n",
      "doc_to_choice": "def doc_to_choice(doc: Dict) -> List[str]:\n    \"\"\"Return the choices that will be used as contexts in \"multiple input\" mode.\"\"\"\n    idx = doc[\"sentence\"].index(\"_\")\n    options = [doc[\"option1\"], doc[\"option2\"]]\n    return [doc[\"sentence\"][:idx] + opt for opt in options]\n",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 1.0
      }
    }
  },
  "versions": {
    "lambada_openai_mt_de": 1.0,
    "lambada_openai_mt_en": 1.0,
    "lambada_openai_mt_es": 1.0,
    "lambada_openai_mt_fr": 1.0,
    "lambada_openai_mt_it": 1.0,
    "paws_de": 0.0,
    "paws_en": 0.0,
    "paws_es": 0.0,
    "paws_fr": 0.0,
    "paws_ja": 0.0,
    "paws_ko": 0.0,
    "paws_zh": 0.0,
    "xcopa_et": 1.0,
    "xcopa_ht": 1.0,
    "xcopa_id": 1.0,
    "xcopa_it": 1.0,
    "xcopa_qu": 1.0,
    "xcopa_sw": 1.0,
    "xcopa_ta": 1.0,
    "xcopa_th": 1.0,
    "xcopa_tr": 1.0,
    "xcopa_vi": 1.0,
    "xcopa_zh": 1.0,
    "xnli_ar": 1.0,
    "xnli_bg": 1.0,
    "xnli_de": 1.0,
    "xnli_el": 1.0,
    "xnli_en": 1.0,
    "xnli_es": 1.0,
    "xnli_eu": 1.0,
    "xnli_fr": 1.0,
    "xnli_hi": 1.0,
    "xnli_ru": 1.0,
    "xnli_sw": 1.0,
    "xnli_th": 1.0,
    "xnli_tr": 1.0,
    "xnli_ur": 1.0,
    "xnli_vi": 1.0,
    "xnli_zh": 1.0,
    "xstorycloze_ar": 1.0,
    "xstorycloze_en": 1.0,
    "xstorycloze_es": 1.0,
    "xstorycloze_eu": 1.0,
    "xstorycloze_hi": 1.0,
    "xstorycloze_id": 1.0,
    "xstorycloze_my": 1.0,
    "xstorycloze_ru": 1.0,
    "xstorycloze_sw": 1.0,
    "xstorycloze_te": 1.0,
    "xstorycloze_zh": 1.0,
    "xwinograd_en": 1.0,
    "xwinograd_fr": 1.0,
    "xwinograd_jp": 1.0,
    "xwinograd_pt": 1.0,
    "xwinograd_ru": 1.0,
    "xwinograd_zh": 1.0
  },
  "n-shot": {
    "lambada_multilingual": 0,
    "lambada_openai_mt_de": 0,
    "lambada_openai_mt_en": 0,
    "lambada_openai_mt_es": 0,
    "lambada_openai_mt_fr": 0,
    "lambada_openai_mt_it": 0,
    "paws_de": 0,
    "paws_en": 0,
    "paws_es": 0,
    "paws_fr": 0,
    "paws_ja": 0,
    "paws_ko": 0,
    "paws_zh": 0,
    "pawsx": 0,
    "xcopa": 0,
    "xcopa_et": 0,
    "xcopa_ht": 0,
    "xcopa_id": 0,
    "xcopa_it": 0,
    "xcopa_qu": 0,
    "xcopa_sw": 0,
    "xcopa_ta": 0,
    "xcopa_th": 0,
    "xcopa_tr": 0,
    "xcopa_vi": 0,
    "xcopa_zh": 0,
    "xnli": 0,
    "xnli_ar": 0,
    "xnli_bg": 0,
    "xnli_de": 0,
    "xnli_el": 0,
    "xnli_en": 0,
    "xnli_es": 0,
    "xnli_eu": 0,
    "xnli_fr": 0,
    "xnli_hi": 0,
    "xnli_ru": 0,
    "xnli_sw": 0,
    "xnli_th": 0,
    "xnli_tr": 0,
    "xnli_ur": 0,
    "xnli_vi": 0,
    "xnli_zh": 0,
    "xstorycloze": 0,
    "xstorycloze_ar": 0,
    "xstorycloze_en": 0,
    "xstorycloze_es": 0,
    "xstorycloze_eu": 0,
    "xstorycloze_hi": 0,
    "xstorycloze_id": 0,
    "xstorycloze_my": 0,
    "xstorycloze_ru": 0,
    "xstorycloze_sw": 0,
    "xstorycloze_te": 0,
    "xstorycloze_zh": 0,
    "xwinograd": 0,
    "xwinograd_en": 0,
    "xwinograd_fr": 0,
    "xwinograd_jp": 0,
    "xwinograd_pt": 0,
    "xwinograd_ru": 0,
    "xwinograd_zh": 0
  },
  "higher_is_better": {
    "lambada_multilingual": {
      "perplexity": false,
      "acc": true
    },
    "lambada_openai_mt_de": {
      "perplexity": false,
      "acc": true
    },
    "lambada_openai_mt_en": {
      "perplexity": false,
      "acc": true
    },
    "lambada_openai_mt_es": {
      "perplexity": false,
      "acc": true
    },
    "lambada_openai_mt_fr": {
      "perplexity": false,
      "acc": true
    },
    "lambada_openai_mt_it": {
      "perplexity": false,
      "acc": true
    },
    "paws_de": {
      "acc": true
    },
    "paws_en": {
      "acc": true
    },
    "paws_es": {
      "acc": true
    },
    "paws_fr": {
      "acc": true
    },
    "paws_ja": {
      "acc": true
    },
    "paws_ko": {
      "acc": true
    },
    "paws_zh": {
      "acc": true
    },
    "pawsx": {
      "acc": true
    },
    "xcopa": {
      "acc": true
    },
    "xcopa_et": {
      "acc": true
    },
    "xcopa_ht": {
      "acc": true
    },
    "xcopa_id": {
      "acc": true
    },
    "xcopa_it": {
      "acc": true
    },
    "xcopa_qu": {
      "acc": true
    },
    "xcopa_sw": {
      "acc": true
    },
    "xcopa_ta": {
      "acc": true
    },
    "xcopa_th": {
      "acc": true
    },
    "xcopa_tr": {
      "acc": true
    },
    "xcopa_vi": {
      "acc": true
    },
    "xcopa_zh": {
      "acc": true
    },
    "xnli": {
      "acc": true
    },
    "xnli_ar": {
      "acc": true
    },
    "xnli_bg": {
      "acc": true
    },
    "xnli_de": {
      "acc": true
    },
    "xnli_el": {
      "acc": true
    },
    "xnli_en": {
      "acc": true
    },
    "xnli_es": {
      "acc": true
    },
    "xnli_eu": {
      "acc": true
    },
    "xnli_fr": {
      "acc": true
    },
    "xnli_hi": {
      "acc": true
    },
    "xnli_ru": {
      "acc": true
    },
    "xnli_sw": {
      "acc": true
    },
    "xnli_th": {
      "acc": true
    },
    "xnli_tr": {
      "acc": true
    },
    "xnli_ur": {
      "acc": true
    },
    "xnli_vi": {
      "acc": true
    },
    "xnli_zh": {
      "acc": true
    },
    "xstorycloze": {
      "acc": true
    },
    "xstorycloze_ar": {
      "acc": true
    },
    "xstorycloze_en": {
      "acc": true
    },
    "xstorycloze_es": {
      "acc": true
    },
    "xstorycloze_eu": {
      "acc": true
    },
    "xstorycloze_hi": {
      "acc": true
    },
    "xstorycloze_id": {
      "acc": true
    },
    "xstorycloze_my": {
      "acc": true
    },
    "xstorycloze_ru": {
      "acc": true
    },
    "xstorycloze_sw": {
      "acc": true
    },
    "xstorycloze_te": {
      "acc": true
    },
    "xstorycloze_zh": {
      "acc": true
    },
    "xwinograd": {
      "acc": true
    },
    "xwinograd_en": {
      "acc": true
    },
    "xwinograd_fr": {
      "acc": true
    },
    "xwinograd_jp": {
      "acc": true
    },
    "xwinograd_pt": {
      "acc": true
    },
    "xwinograd_ru": {
      "acc": true
    },
    "xwinograd_zh": {
      "acc": true
    }
  },
  "n-samples": {
    "xwinograd_zh": {
      "original": 504,
      "effective": 504
    },
    "xwinograd_ru": {
      "original": 315,
      "effective": 315
    },
    "xwinograd_pt": {
      "original": 263,
      "effective": 263
    },
    "xwinograd_jp": {
      "original": 959,
      "effective": 959
    },
    "xwinograd_fr": {
      "original": 83,
      "effective": 83
    },
    "xwinograd_en": {
      "original": 2325,
      "effective": 2325
    },
    "xstorycloze_zh": {
      "original": 1511,
      "effective": 1511
    },
    "xstorycloze_te": {
      "original": 1511,
      "effective": 1511
    },
    "xstorycloze_sw": {
      "original": 1511,
      "effective": 1511
    },
    "xstorycloze_ru": {
      "original": 1511,
      "effective": 1511
    },
    "xstorycloze_my": {
      "original": 1511,
      "effective": 1511
    },
    "xstorycloze_id": {
      "original": 1511,
      "effective": 1511
    },
    "xstorycloze_hi": {
      "original": 1511,
      "effective": 1511
    },
    "xstorycloze_eu": {
      "original": 1511,
      "effective": 1511
    },
    "xstorycloze_es": {
      "original": 1511,
      "effective": 1511
    },
    "xstorycloze_en": {
      "original": 1511,
      "effective": 1511
    },
    "xstorycloze_ar": {
      "original": 1511,
      "effective": 1511
    },
    "xnli_eu": {
      "original": 5010,
      "effective": 5010
    },
    "xnli_zh": {
      "original": 2490,
      "effective": 2490
    },
    "xnli_vi": {
      "original": 2490,
      "effective": 2490
    },
    "xnli_ur": {
      "original": 2490,
      "effective": 2490
    },
    "xnli_tr": {
      "original": 2490,
      "effective": 2490
    },
    "xnli_th": {
      "original": 2490,
      "effective": 2490
    },
    "xnli_sw": {
      "original": 2490,
      "effective": 2490
    },
    "xnli_ru": {
      "original": 2490,
      "effective": 2490
    },
    "xnli_hi": {
      "original": 2490,
      "effective": 2490
    },
    "xnli_fr": {
      "original": 2490,
      "effective": 2490
    },
    "xnli_es": {
      "original": 2490,
      "effective": 2490
    },
    "xnli_en": {
      "original": 2490,
      "effective": 2490
    },
    "xnli_el": {
      "original": 2490,
      "effective": 2490
    },
    "xnli_de": {
      "original": 2490,
      "effective": 2490
    },
    "xnli_bg": {
      "original": 2490,
      "effective": 2490
    },
    "xnli_ar": {
      "original": 2490,
      "effective": 2490
    },
    "xcopa_zh": {
      "original": 500,
      "effective": 500
    },
    "xcopa_vi": {
      "original": 500,
      "effective": 500
    },
    "xcopa_tr": {
      "original": 500,
      "effective": 500
    },
    "xcopa_th": {
      "original": 500,
      "effective": 500
    },
    "xcopa_ta": {
      "original": 500,
      "effective": 500
    },
    "xcopa_sw": {
      "original": 500,
      "effective": 500
    },
    "xcopa_qu": {
      "original": 500,
      "effective": 500
    },
    "xcopa_it": {
      "original": 500,
      "effective": 500
    },
    "xcopa_id": {
      "original": 500,
      "effective": 500
    },
    "xcopa_ht": {
      "original": 500,
      "effective": 500
    },
    "xcopa_et": {
      "original": 500,
      "effective": 500
    },
    "paws_zh": {
      "original": 2000,
      "effective": 2000
    },
    "paws_ko": {
      "original": 2000,
      "effective": 2000
    },
    "paws_ja": {
      "original": 2000,
      "effective": 2000
    },
    "paws_fr": {
      "original": 2000,
      "effective": 2000
    },
    "paws_es": {
      "original": 2000,
      "effective": 2000
    },
    "paws_en": {
      "original": 2000,
      "effective": 2000
    },
    "paws_de": {
      "original": 2000,
      "effective": 2000
    },
    "lambada_openai_mt_it": {
      "original": 5153,
      "effective": 5153
    },
    "lambada_openai_mt_fr": {
      "original": 5153,
      "effective": 5153
    },
    "lambada_openai_mt_es": {
      "original": 5153,
      "effective": 5153
    },
    "lambada_openai_mt_en": {
      "original": 5153,
      "effective": 5153
    },
    "lambada_openai_mt_de": {
      "original": 5153,
      "effective": 5153
    }
  },
  "config": {
    "model": "hf",
    "model_args": "pretrained=Qwen/Qwen2.5-7B,trust_remote_code=True,dtype=float32",
    "model_num_parameters": 7615616512,
    "model_dtype": "torch.float32",
    "model_revision": "main",
    "model_sha": "d149729398750b98c0af14eb82c78cfe92750796",
    "batch_size": "8",
    "batch_sizes": [],
    "device": "cuda",
    "use_cache": null,
    "limit": null,
    "bootstrap_iters": 100000,
    "gen_kwargs": null,
    "random_seed": 0,
    "numpy_seed": 1234,
    "torch_seed": 1234,
    "fewshot_seed": 1234
  },
  "git_hash": null,
  "date": 1741725072.8011067,
  "pretty_env_info": "'NoneType' object has no attribute 'splitlines'",
  "transformers_version": "4.49.0",
  "upper_git_hash": null,
  "tokenizer_pad_token": [
    "<|endoftext|>",
    151643
  ],
  "tokenizer_eos_token": [
    "<|endoftext|>",
    151643
  ],
  "tokenizer_bos_token": [
    null,
    null
  ],
  "eot_token_id": 151643,
  "max_length": 131072,
  "task_hashes": {},
  "model_source": "hf",
  "model_name": "Qwen/Qwen2.5-7B",
  "model_name_sanitized": "Qwen__Qwen2.5-7B",
  "system_instruction": null,
  "system_instruction_sha": null,
  "fewshot_as_multiturn": false,
  "chat_template": null,
  "chat_template_sha": null,
  "start_time": 446448.91820837,
  "end_time": 449201.152881962,
  "total_evaluation_time_seconds": "2752.234673592029"
}